<?php

namespace App\Management\Models;

/**
 * 商品
 */
class Product
{
    /**
     * 商品番号
     *
     * ユーザー入力ではなく、システムで自動生成した番号が割り当てられる
     */
    public string $number;

    //商品スキームから具体的な商品を作成するためのパラメータ(属性、条件、数量単位、通貨)は、見積で使用されていないのであれば編集可とする
    //また、編集開始時には利用可能フラグをOFFにし、編集中に見積から利用されないようにする
    // @todo 「商品の編集」機能を作成する また、商品の編集は、具体的な商品を作成するためのパラメータ、単価、仕入単価、などで編集単位を細分化したほうが良いかもしれない

    /**
     * 利用可能フラグ
     *
     * true の場合は見積作成or編集時の商品選択で選択可
     * false の場合は見積作成or編集時の商品選択で選択不可
     * 画面上の表示は「公開設定(公開/非公開)」とする
     */
    public bool $available;

    /**
     * 販売単価
     *
     * 有効期間の開始が現在よりも未来のものは編集可、現在以前のものは編集不可とする
     * @todo 整理 見積で選択された場合の販売単価は、見積もりの有効期間の開始時点で有効な販売単価の中から選択させるようにする
     */

    /**
     * 仕入単価
     *
     * 有効期間の開始が現在よりも未来のものは編集可、現在以前のものは編集不可とする
     * @todo 整理 請求の仕入単価は、請求の請求日時点で有効な仕入単価のうち、最も有効期間の開始が新しいものを採用する
     */

    /**
     * 更新する
     *
     * @return bool
     */
    public function update(): bool
    {
        //見積に利用不可の場合は、商品スキーム、属性、条件、数量単位、通貨の更新は可
        //見積に利用可の場合は、商品スキーム、属性、条件、数量単位、通貨の更新は不可
        //
        //見積の明細に利用されていない場合は、商品スキーム、属性、条件、数量単位、通貨の更新は可
        //見積の明細に利用されている場合は、商品スキーム、属性、条件、数量単位、通貨の更新は不可
        //
        //UIの操作的には、利用不可にしてから編集をし、編集が終わったら利用可にする、というようなイメージ
        //↑の見積に利用可/不可、利用されている/いないの制御は、単価、仕入単価についても同様の制御が必要になる

        //社内メモはいつでも更新できて良い

        return false;
    }

    /**
     * 削除する
     *
     * @return bool
     */
    public function delete(): bool
    {
        //商品が見積の明細に利用されていない場合のみ削除可能とする
        return false;
    }

    /**
     * 復元する
     *
     * @return bool
     */
    public function restore(): bool
    {
        //同様の商品スキーム、属性、条件、数量単位、通貨の商品が作られていない場合のみ復元可能とする
        return false;
    }
}
